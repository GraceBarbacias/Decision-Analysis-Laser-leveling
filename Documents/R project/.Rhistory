# P_fert<-10 #kg/ha
# K_fert<-12 #kg/ha
# land_use<-200*23487 #benefit in VND/ha/year
# seed<-0.6*23487 #benefit in VND/kg
# paddy<-0.2*23487 #benefit in VND/kg
# fertilizer<-170*23487 #benefit in VND/ha
# season_profit<- ((land_use)/2)+(seed*seed_rate)+ (paddy*seed_rate) + (fertilizer)#profit from season's yields and savings after LLL in VND/ha
# Output_farmer<- season_profit *10 #VND/ha for 10 cropping seasons
# Precalculationn for the change in yield with the intervention of Laser Leveling
precalc_LL_yield <-
vv(yield_LL, var_CV, n_years) * # yield [t/ha]
vv(farm_area, var_CV, n_years) * # area of the field per farmer [ha]
vv(rice_price, var_CV, n_years) # rice price [USD/t]
# Precalculationn for the water savings with the intervention of Laser Leveling
precalc_LL_water_savings <-
vv(LL_water_saving, var_CV, n_years) * # water savings in [m^3/ha]
vv(LL_water_cost, var_CV, n_years) # cost of irrigation water [USD/m^3]
# Precalculationn for the fertilizer savings with the intervention of Laser Leveling
precalc_LL_fert_savings <-
(vv(fertilizer_cost_noLL, var_CV, n_years) - # fertilizer cost w/o LL [USD/ha]
vv(fertilizer_cost_LL, var_CV, n_years)) * # fertilizer cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the pesticide savings with the intervention of Laser Leveling
precalc_LL_pest_savings <-
(vv(pesticide_cost_noLL, var_CV, n_years) - # pesticide cost w/o LL [USD/ha]
vv(pesticide_cost_LL, var_CV, n_years)) * # pesticide cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the seed savings with the intervention of Laser Leveling
precalc_LL_seed_savings <-
(vv(seed_cost_noLL, var_CV, n_years) - # seed cost w/o LL [USD/ha]
vv(seed_cost_LL , var_CV, n_years)) * # seed cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the fuel savings with the intervention of Laser Leveling
precalc_LL_fuel_savings <-
(vv(water_pumping_fuel_cost_noLL, var_CV, n_years) - # fuel w/o LL [USD/ha]
vv(water_pumping_fuel_cost_LL, var_CV, n_years)) * # fuel cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the labor cost savings with the intervention of Laser Leveling
precalc_LL_labor_savings <-
(vv(labor_cost_noLL, var_CV, n_years) - # labor w/o LL [USD/ha]
vv(labor_cost_LL , var_CV, n_years)) * # labor cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# ASK GRACE -please explain
# Precalculationn for the change in land use with the intervention of Laser Leveling
precalc_LL_land_use <-
vv(LL_land_USD_ha_year, var_CV, n_years) *
vv(farm_area, var_CV, n_years)
precalc_LL <-
precalc_LL_yield +
precalc_LL_water_savings +
precalc_LL_fert_savings +
precalc_LL_pest_savings +
precalc_LL_seed_savings +
precalc_LL_labor_savings +
precalc_LL_fuel_savings +
precalc_LL_land_use
# benefits of rice cultivation WITHOUT LL:
precalc_conv_prod <-
vv(yield_noLL, var_CV, n_years) * # yield [t/ha]
vv(farm_area, var_CV, n_years) * # area of the field per farmer [ha]
vv(rice_price, var_CV, n_years) # rice price [USD/t]
####  Intervention Preamble ####
# Run a simulation for both the application of LL and the conventional scenario without it:
for (intervention_LL in c(FALSE,TRUE))
{
# Set the preambles for the case if LLL application:
if (intervention_LL)
{
event_LL <- TRUE
event_LL_cost <- TRUE
event_LL_PlanningCost <- TRUE
event_conv_rice_prod <- FALSE
# Set the preambles for the normal rice production scenario
} else
{
event_LL <- FALSE
event_LL_cost <- FALSE
event_LL_PlanningCost <- FALSE
event_conv_rice_prod <- TRUE
}
if (intervention_No_coop_Event) {
# only relevant if selected by chance and = TRUE
# if this condition is TRUE the implementation of LLL will be planned but not executed
event_LL <- FALSE # no LLL applied
event_LL_cost <- FALSE # no establishment costs are created (planning costs however may occur)
event_LL_PlanningCost <- TRUE
event_conv_rice_prod <- TRUE # the normal scenario takes place
}
####  Intervention ####
# summing up the investment costs if LLL is applied or not
if (event_LL_cost) {
investment_cost_LL <- establishment_cost_LL
} else
investment_cost_LL <- 0
# calculating the planning costs ########MAYBE DONT USE########
if (event_LL_PlanningCost) {
plan_cost_intervention_LL <- planning_cost_LL +
zoning_cost_LL
} else
plan_cost_intervention_LL <- 0
# calculating the maintenance costs, initializing the array with 0 costs for the first year:
maintenance_cost <- rep(0, n_years)
# Cost of the application of LLL per year
if (event_LL_cost)
maintenance_cost <-
maintenance_cost +
# add a variation of the variable over the years
decisionSupport::vv(maintenance_cost_LL, var_CV, n_years)
# First, all maintenance costs are stored in the variable:
intervention_cost <- maintenance_cost
# in the first year the establishment costs and planning costs are added:
intervention_cost[1] <-
intervention_cost[1] +  # equal to maintenance_cost [1]
investment_cost_LL +    # equal to establishment costs
plan_cost_intervention_LL
#### Benefits from  cultivation in the intervention strips ####
# Now all benefits of the intervention will be calculated
# event_LL is 0 if the introduction of LL does not take place, thereby the gains would be multiplied by 0 = become 0
# Benefits of intervention LLL:
intervention_LL_benefits <-
as.numeric(event_LL) * precalc_LL
# Benefits of conventional rice production (ground truth):
no_LL_benefits <-
as.numeric(event_conv_rice_prod) *   precalc_conv_prod
#### Total benefits from rice production ####
# combined benefits (in reality: intervention_LL_benefits + 0 OR no_LL_benefits + 0)
#rice_production <- intervention_LL_benefits + no_LL_benefits #not needed since we separate the cases in the next part
# if the decision was to implement LL:
if (intervention_LL){
net_benefits <- intervention_LL_benefits - intervention_cost
# save result in result_interv (result intervention):
result_interv <- net_benefits}
# if the decision was to NOT implement LL:
if (!intervention_LL){
net_benefits <- no_LL_benefits - intervention_cost
# intervention-cost should be equal to planning costs (intervention_cost = planning costs IF no cooperation event takes place)
# save result in result_n_interv (result NO intervention):
result_no_interv <- net_benefits}
} #close intervention loop bracket
NPV_interv <-
discount(result_interv, discount_rate, calculate_NPV = TRUE)
NPV_no_interv <-
discount(result_no_interv, discount_rate, calculate_NPV = TRUE)
# return all the data we want as output
return(list(LL_NPV = NPV_interv,
NO_LL_NPV = NPV_no_interv,
NPV_LL_added_value = NPV_interv - NPV_no_interv,
Cashflow_LL_added_value = result_interv - result_no_interv))
}
# Generate a random seed
random_seed <- as.integer(Sys.time())  # Get the current time in seconds and convert it to an integer
# Set the random seed
set.seed(random_seed)
# Print the random seed
print(random_seed)
# Monte Carlo simulation results R code:
mcSimulation_results <- decisionSupport::mcSimulation(
estimate = decisionSupport::estimate_read_csv("Input_table_LL_decision.csv", sep = ';', strip.white = TRUE),
model_function = LL_model_function,
numberOfModelRuns = 1e3, #run 1,000 times
functionSyntax = "plainNames"
)
library(decisionSupport)
# R code for vizualisation of results:
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = c("LL_NPV", "NO_LL_NPV"),
method = 'smooth_simple_overlay',
base_size = 12,
colors = c("#FFC300", "#9f3ee2"))
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = c("LL_NPV", "NO_LL_NPV"),
method = 'hist_simple_overlay',
base_size = 12,
colors = c("#FFC300", "#9f3ee2"))
NPV_names = c("Rice Production with Laser Leveling NPV", "Conventional Rice Production NPV")
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = c("LL_NPV", "NO_LL_NPV"),
method = 'boxplot',
new_names = "NPV_names",
base_size = 12,
colors = c("#FFC300", "#9f3ee2"))
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = "NPV_LL_added_value",
method = 'boxplot_density',
base_size = 12,
colors = "#FFC300")
plot_cashflow(mcSimulation_object = mcSimulation_results, cashflow_var_name = "Cashflow_LL_added_value")
library(decisionSupport)
#select the 3rd outcome variable "NPV_LLL_added_value" from the mcSimulation results and run PLS simulation
pls_result <- plsr.mcSimulation(object = mcSimulation_results,
resultName = names(mcSimulation_results$y)[3], ncomp = 1)
input_table <- read.csv("Input_table_LL_decision.csv")
plot_pls(pls_result, input_table = input_table, threshold = 0)
pls_result
print(pls_result)
library(decisionSupport)
#select the 3rd outcome variable "NPV_LLL_added_value" from the mcSimulation results and run PLS simulation
pls_result <- plsr.mcSimulation(object = mcSimulation_results,
resultName = names(mcSimulation_results$y)[3], ncomp = 1)
input_table <- read.csv("Input_table_LL_decision.csv")
plot_pls(pls_result, input_table = input_table, threshold = 0)
# Install packages if needed (uncomment code):
# install.packages("decisionSupport")
# install.packages("dplyr")
# install.packages("ggplot2")
library(decisionSupport)
library(dplyr)
library(ggplot2)
library(readr)
#Automatically write R package citation entries to a .bib file
knitr::write_bib(c(.packages(),
'decisionSupport',
'dplyr',
'ggplot2'),'project_packages.bib')
# data loading and sorting R code:
library("ggplot2")
library(dplyr)
# cost analysis for LLL service provider (to be paid by farmer)
#declaration of user input variables:
VND<-23487.50 #value of 1 USD to Vietnamese Dong (VND) as of date
###operation (plowing, planting, harvest)
area_covered<- 3 #in ha
working_days<- 60 #in days
hours_day<-8 #number of working hours per day
hrs_area<-(area_covered/working_days/hours_day)*10000 #area to be covered in sq.m per hour
###equipment sizing
speed_op<-7.5 #speed of operation in km/hr
field_ef<-40 #field efficiency in %
LL_size<- 1.5 #commercially available size of drag bucket in m
actual_area<- +(LL_size*speed_op)*(field_ef/100)*1000 #actual area covered in m2/hr
###cost calculation
tractor_price<-30000*VND #purchase price in Vietnamese Dong (VND)
usage_tractor<-1200 #in hrs/yr
LL_price<-12000*VND #purchase price of laser leveler in VND
usage_LL<- +working_days*hours_day #usage of laser leveler in hours/year
##operating costs
engine_power<-37.285 #in kW
fuel_use<-+engine_power/4.2 #in L
fuel_cost<-22622.5 #in VND/L
fuel_cost_hr<-+fuel_cost*fuel_use #fuel cost per hr
repair_maintenance<-tractor_price/10/usage_tractor #VND/hr
labor<-20000 #in VND/hr
total_op_cost<-+repair_maintenance+fuel_cost_hr+labor #in VND/hr
##fixed costs
tractor_dep<-+tractor_price/10/usage_tractor #tractor depreciation in VND/hr
LL_dep<-+LL_price/10/usage_LL #laser leveler depreciation in VND/hr
inv_opp_cost<-7.8 #investment/opportunity cost, a.k.a. interest for borrowing money
inv_cost<-+(tractor_price/usage_tractor)+((LL_price/usage_LL)*(inv_opp_cost/100)) #investment cost in VND/hr
total_fixed_cost<-tractor_dep+LL_dep+inv_cost
total_cost<-+total_op_cost+total_fixed_cost #total cost in VND/hr
land_lvl<-2 #average soil variation in cm
cost_area<-total_cost/(actual_area/10000)*land_lvl #cost/area in VND/ha
###service provider
return_mgt<- 10 #return to management for operating the business in %
service_fee_LLL<-(cost_area*((100+return_mgt)/100))  #in VND/ha, assuming LLL operation of 60 days per year
Input_cost_farmer<-service_fee_LLL*(1+0.2*9) #in VND/ha under the assumption of LL operation every 5 years and resmoothing per season valued at 20%
print(Input_cost_farmer)
#benefits for farmer
seed_rate<-40 #kg/ha
yield<-5500 #at 14% MC, kg/ha
N_fert<-70 #kg/ha
P_fert<-10 #kg/ha
K_fert<-12 #kg/ha
land_use<-200*23487 #benefit in VND/ha/year
seed<-0.6*23487 #benefit in VND/kg
paddy<-0.2*23487 #benefit in VND/kg
fertilizer<-170*23487 #benefit in VND/ha
season_profit<- ((land_use)/2)+(seed*seed_rate)+ (paddy*seed_rate) + (fertilizer)#profit from season's yields and savings after LLL in VND/ha
Output_farmer<- season_profit *10 #VND/ha for 10 cropping seasons
print(Output_farmer)
#benefit-cost ratio
BC_ratio<- Output_farmer/Input_cost_farmer
print(BC_ratio)
#data visualization
cost_shares<-data.frame(Portions=c("Fuel consumption","Repair and maintenance","Labor cost", "Tractor depreciation","Laser leveler depreciation", "Investment cost"), share=c(fuel_cost_hr, repair_maintenance, labor, tractor_dep, LL_dep, inv_cost))
cost_shares <- cost_shares %>%
arrange(desc(Portions)) %>%
mutate(lab.ypos = cumsum(share) - 0.5*share)
mycols <- c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF", "#00BA38","#A020F0")
ggplot(cost_shares, aes(x = "", y = share, fill = Portions)) +
geom_bar(width = 1, stat = "identity", color = "white") +
coord_polar("y", start = 0)+
geom_text(aes(y = lab.ypos, label =" "), color = "white")+
scale_fill_manual(values = mycols) +
theme_void()
# data loading and sorting R code:
cost_area
# yield analysis R:
yield_weight<- 0 #weight of yield (total grains harvested in field at 14% MC) in kg
field_size<-0  #typical field size in Vietnam in ha
GY<- yield_weight/field_size
# sensitivity analysis R code:
LL_model_function <- function(x, varnames){
# calculate ex-ante risks: impact the implementation of interventions ####
#
intervention_No_coop_Event <- chance_event(chance_noLL, 1, 0, n = 1)
# chance_event chooses with probability "intervention_NonColabInvolv" the first scenario (1 in this case), otherwise 0 (no involvement)
#precalculation of common random draws for all intervention model runs
# benefits of rice cultivation WITH LLL:
# ##reference for the units used in precalculations, these are values per season, and there are 2 seasons per year:
# seed_rate<-40 #kg/ha
# yield<-5500 #at 14% MC, kg/ha
# N_fert<-70 #kg/ha
# P_fert<-10 #kg/ha
# K_fert<-12 #kg/ha
# land_use<-200*23487 #benefit in VND/ha/year
# seed<-0.6*23487 #benefit in VND/kg
# paddy<-0.2*23487 #benefit in VND/kg
# fertilizer<-170*23487 #benefit in VND/ha
# season_profit<- ((land_use)/2)+(seed*seed_rate)+ (paddy*seed_rate) + (fertilizer)#profit from season's yields and savings after LLL in VND/ha
# Output_farmer<- season_profit *10 #VND/ha for 10 cropping seasons
# Precalculationn for the change in yield with the intervention of Laser Leveling
precalc_LL_yield <-
vv(yield_LL, var_CV, n_years) * # yield [t/ha]
vv(farm_area, var_CV, n_years) * # area of the field per farmer [ha]
vv(rice_price, var_CV, n_years) # rice price [USD/t]
# Precalculationn for the water savings with the intervention of Laser Leveling
precalc_LL_water_savings <-
vv(LL_water_saving, var_CV, n_years) * # water savings in [m^3/ha]
vv(LL_water_cost, var_CV, n_years) # cost of irrigation water [USD/m^3]
# Precalculationn for the fertilizer savings with the intervention of Laser Leveling
precalc_LL_fert_savings <-
(vv(fertilizer_cost_noLL, var_CV, n_years) - # fertilizer cost w/o LL [USD/ha]
vv(fertilizer_cost_LL, var_CV, n_years)) * # fertilizer cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the pesticide savings with the intervention of Laser Leveling
precalc_LL_pest_savings <-
(vv(pesticide_cost_noLL, var_CV, n_years) - # pesticide cost w/o LL [USD/ha]
vv(pesticide_cost_LL, var_CV, n_years)) * # pesticide cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the seed savings with the intervention of Laser Leveling
precalc_LL_seed_savings <-
(vv(seed_cost_noLL, var_CV, n_years) - # seed cost w/o LL [USD/ha]
vv(seed_cost_LL , var_CV, n_years)) * # seed cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the fuel savings with the intervention of Laser Leveling
precalc_LL_fuel_savings <-
(vv(water_pumping_fuel_cost_noLL, var_CV, n_years) - # fuel w/o LL [USD/ha]
vv(water_pumping_fuel_cost_LL, var_CV, n_years)) * # fuel cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# Precalculationn for the labor cost savings with the intervention of Laser Leveling
precalc_LL_labor_savings <-
(vv(labor_cost_noLL, var_CV, n_years) - # labor w/o LL [USD/ha]
vv(labor_cost_LL , var_CV, n_years)) * # labor cost with LL [USD/ha]
vv(farm_area, var_CV, n_years) # area of the field per farmer [ha]
# ASK GRACE -please explain
# Precalculationn for the change in land use with the intervention of Laser Leveling
precalc_LL_land_use <-
vv(LL_land_USD_ha_year, var_CV, n_years) *
vv(farm_area, var_CV, n_years)
precalc_LL <-
precalc_LL_yield +
precalc_LL_water_savings +
precalc_LL_fert_savings +
precalc_LL_pest_savings +
precalc_LL_seed_savings +
precalc_LL_labor_savings +
precalc_LL_fuel_savings +
precalc_LL_land_use
# benefits of rice cultivation WITHOUT LL:
precalc_conv_prod <-
vv(yield_noLL, var_CV, n_years) * # yield [t/ha]
vv(farm_area, var_CV, n_years) * # area of the field per farmer [ha]
vv(rice_price, var_CV, n_years) # rice price [USD/t]
####  Intervention Preamble ####
# Run a simulation for both the application of LL and the conventional scenario without it:
for (intervention_LL in c(FALSE,TRUE))
{
# Set the preambles for the case if LLL application:
if (intervention_LL)
{
event_LL <- TRUE
event_LL_cost <- TRUE
event_LL_PlanningCost <- TRUE
event_conv_rice_prod <- FALSE
# Set the preambles for the normal rice production scenario
} else
{
event_LL <- FALSE
event_LL_cost <- FALSE
event_LL_PlanningCost <- FALSE
event_conv_rice_prod <- TRUE
}
if (intervention_No_coop_Event) {
# only relevant if selected by chance and = TRUE
# if this condition is TRUE the implementation of LLL will be planned but not executed
event_LL <- FALSE # no LLL applied
event_LL_cost <- FALSE # no establishment costs are created (planning costs however may occur)
event_LL_PlanningCost <- TRUE
event_conv_rice_prod <- TRUE # the normal scenario takes place
}
####  Intervention ####
# summing up the investment costs if LLL is applied or not
if (event_LL_cost) {
investment_cost_LL <- establishment_cost_LL
} else
investment_cost_LL <- 0
# calculating the planning costs ########MAYBE DONT USE########
if (event_LL_PlanningCost) {
plan_cost_intervention_LL <- planning_cost_LL +
zoning_cost_LL
} else
plan_cost_intervention_LL <- 0
# calculating the maintenance costs, initializing the array with 0 costs for the first year:
maintenance_cost <- rep(0, n_years)
# Cost of the application of LLL per year
if (event_LL_cost)
maintenance_cost <-
maintenance_cost +
# add a variation of the variable over the years
decisionSupport::vv(maintenance_cost_LL, var_CV, n_years)
# First, all maintenance costs are stored in the variable:
intervention_cost <- maintenance_cost
# in the first year the establishment costs and planning costs are added:
intervention_cost[1] <-
intervention_cost[1] +  # equal to maintenance_cost [1]
investment_cost_LL +    # equal to establishment costs
plan_cost_intervention_LL
#### Benefits from  cultivation in the intervention strips ####
# Now all benefits of the intervention will be calculated
# event_LL is 0 if the introduction of LL does not take place, thereby the gains would be multiplied by 0 = become 0
# Benefits of intervention LLL:
intervention_LL_benefits <-
as.numeric(event_LL) * precalc_LL
# Benefits of conventional rice production (ground truth):
no_LL_benefits <-
as.numeric(event_conv_rice_prod) *   precalc_conv_prod
#### Total benefits from rice production ####
# combined benefits (in reality: intervention_LL_benefits + 0 OR no_LL_benefits + 0)
#rice_production <- intervention_LL_benefits + no_LL_benefits #not needed since we separate the cases in the next part
# if the decision was to implement LL:
if (intervention_LL){
net_benefits <- intervention_LL_benefits - intervention_cost
# save result in result_interv (result intervention):
result_interv <- net_benefits}
# if the decision was to NOT implement LL:
if (!intervention_LL){
net_benefits <- no_LL_benefits - intervention_cost
# intervention-cost should be equal to planning costs (intervention_cost = planning costs IF no cooperation event takes place)
# save result in result_n_interv (result NO intervention):
result_no_interv <- net_benefits}
} #close intervention loop bracket
NPV_interv <-
discount(result_interv, discount_rate, calculate_NPV = TRUE)
NPV_no_interv <-
discount(result_no_interv, discount_rate, calculate_NPV = TRUE)
# return all the data we want as output
return(list(LL_NPV = NPV_interv,
NO_LL_NPV = NPV_no_interv,
NPV_LL_added_value = NPV_interv - NPV_no_interv,
Cashflow_LL_added_value = result_interv - result_no_interv))
}
# Generate a random seed
random_seed <- as.integer(Sys.time())  # Get the current time in seconds and convert it to an integer
# Set the random seed
set.seed(random_seed)
# Print the random seed
print(random_seed)
# Monte Carlo simulation results R code:
mcSimulation_results <- decisionSupport::mcSimulation(
estimate = decisionSupport::estimate_read_csv("Input_table_LL_decision.csv", sep = ';', strip.white = TRUE),
model_function = LL_model_function,
numberOfModelRuns = 1e3, #run 1,000 times
functionSyntax = "plainNames"
)
library(decisionSupport)
# R code for vizualisation of results:
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = c("LL_NPV", "NO_LL_NPV"),
method = 'smooth_simple_overlay',
base_size = 12,
colors = c("#FFC300", "#9f3ee2"))
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = c("LL_NPV", "NO_LL_NPV"),
method = 'hist_simple_overlay',
base_size = 12,
colors = c("#FFC300", "#9f3ee2"))
NPV_names = c("Rice Production with Laser Leveling NPV", "Conventional Rice Production NPV")
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = c("LL_NPV", "NO_LL_NPV"),
method = 'boxplot',
new_names = "NPV_names",
base_size = 12,
colors = c("#FFC300", "#9f3ee2"))
decisionSupport::plot_distributions(mcSimulation_object = mcSimulation_results,
vars = "NPV_LL_added_value",
method = 'boxplot_density',
base_size = 12,
colors = "#FFC300")
plot_cashflow(mcSimulation_object = mcSimulation_results, cashflow_var_name = "Cashflow_LL_added_value")
library(decisionSupport)
#select the 3rd outcome variable "NPV_LLL_added_value" from the mcSimulation results and run PLS simulation
pls_result <- plsr.mcSimulation(object = mcSimulation_results,
resultName = names(mcSimulation_results$y)[3], ncomp = 1)
input_table <- read.csv("Input_table_LL_decision.csv",sep = ';')
plot_pls(pls_result, input_table = input_table, threshold = 0)
#here we subset the outputs from the mcSimulation function (y) by selecting the correct variables
# this should be done by the user (be sure to run the multi_EVPI only on the variables that the user wants)
mcSimulation_table <- data.frame(mcSimulation_results$x, mcSimulation_results$y[1:3])
evpi <- multi_EVPI(mc = mcSimulation_table, first_out_var = "LL_NPV")
#> [1] "Processing 3 output variables. This can take some time."
#> [1] "Output variable 1 (LLL_NPV) completed."
#> [1] "Output variable 2 (NO_LLL_NPV) completed."
#> [1] "Output variable 3 (NPV_LLL_added_value) completed."
plot_evpi(evpi, decision_vars = "LL_NPV")
#> Warning: There are no variables with a positive EVPI. You probably do not need a
#> plot for that.
#>
compound_figure(mcSimulation_object = mcSimulation_results, input_table = input_table, plsrResults = pls_result, EVPIresults = evpi, decision_var_name = "NPV_LL_added_value", cashflow_var_name = "Cashflow_LL_added_value", base_size = 7)
library(knitr)
library(decisionSupport)
knitr::write_bib(c(.packages(),'knitr','decisionSupport'),'bib/project_packages.bib')
